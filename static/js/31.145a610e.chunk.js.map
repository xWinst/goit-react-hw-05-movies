{"version":3,"file":"static/js/31.145a610e.chunk.js","mappings":"qQACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAAyF,0B,SCuDzF,EAlDoB,WAChB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAyBR,OAvBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBADX,wCAIZ,2FACIL,EAAU,WADd,kBAG2BM,EAAAA,EAAAA,WAAoBL,GAH/C,OAGcM,EAHd,OAIQT,EAAeS,EAAKC,SACfD,EAAKC,QAAQC,OACbT,EAAU,YADWA,EAAU,aAL5C,gDAQQU,QAAQC,IAAI,UAAZ,MARR,0DAJY,sBAkBZ,OAhBAL,EAAAA,EAAAA,OAAkBF,EAAWQ,OAFjB,mCAgBZC,GAEO,WACHT,EAAWU,WAEhB,CAACb,KAGA,gCACgB,YAAXF,IAAwB,SAAC,KAAD,IACb,aAAXA,IACG,eAAIgB,UAAWC,EAAf,SACKnB,EAAYoB,KAAI,SAAAC,GAAM,OACnB,gBAA4BH,UAAWC,EAAvC,WACI,qCAAaE,EAAOC,WACpB,cAAGJ,UAAWC,EAAd,SAAuBE,EAAOE,YAFzBF,EAAOG,iBAOhB,cAAXtB,IACG,eAAIgB,UAAWC,EAAf","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsInfo/ReviewsInfo.module.css?3f3d","components/ReviewsInfo/ReviewsInfo.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewsInfo_list__sh+xR\",\"item\":\"ReviewsInfo_item__RDLoT\",\"name\":\"ReviewsInfo_name__zASIM\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components';\nimport delivery from 'services/delivery';\nimport s from './ReviewsInfo.module.css';\n\nconst ReviewsInfo = () => {\n    const [reviewsList, setReviewsList] = useState([]);\n    const [status, setStatus] = useState('');\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const controller = new AbortController();\n        delivery.signal = controller.signal;\n\n        async function getInfo() {\n            setStatus('loading');\n            try {\n                const data = await delivery.getReviews(movieId);\n                setReviewsList(data.results);\n                if (!data.results.length) setStatus('noResults');\n                else setStatus('resolved');\n            } catch (error) {\n                console.log('error: ', error);\n            }\n        }\n\n        getInfo();\n\n        return () => {\n            controller.abort();\n        };\n    }, [movieId]);\n\n    return (\n        <>\n            {status === 'loading' && <Loader />}\n            {status === 'resolved' && (\n                <ul className={s.list}>\n                    {reviewsList.map(review => (\n                        <li key={review.created_at} className={s.item}>\n                            <h3>Author: {review.author}</h3>\n                            <p className={s.name}>{review.content}</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {status === 'noResults' && (\n                <h3 className={s.item}>\n                    We don't have any reviews for this movie\n                </h3>\n            )}\n        </>\n    );\n};\n\nexport default ReviewsInfo;\n"],"names":["useState","reviewsList","setReviewsList","status","setStatus","movieId","useParams","useEffect","controller","AbortController","delivery","data","results","length","console","log","signal","getInfo","abort","className","s","map","review","author","content","created_at"],"sourceRoot":""}